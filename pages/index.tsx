// TODO: username di sebarin ke anak2 via context
// TODO: User bisa lanjut kerjain quiz
// TODO: Refactoring
import type { NextPage } from "next";
import Head from "next/head";
import React, { useState } from "react";
import Form from "../components/Form";
import Header from "../components/Header";
import Quiz from "../components/Quiz";
import { QuizContext } from "../contexts/QuizContext";
import useLocalStorage from "../hooks/useLocalStorage";

function LoginButton({ toggleQuizScreen }: { toggleQuizScreen: () => void }) {
  return (
    <button
      onClick={toggleQuizScreen}
      type="button"
      className="rounded-lg border border-green-100 px-5 py-2.5 text-center font-medium tracking-wide text-green-100 hover:border-green-400 hover:bg-green-400 hover:text-gray-800"
    >
      Start Quiz
    </button>
  );
}

const Home: NextPage = () => {
  const [username, setUsername] = useLocalStorage("username", "");
  const [showQuizScreen, setShowQuizScreen] = useState(false);
  const toggleQuizScreen = () => {
    setShowQuizScreen(!showQuizScreen);
  };

  const handleSubmit = (name: string) => (e: React.SyntheticEvent) => {
    e.preventDefault();

    if (name.length > 2) {
      setUsername(name);
    }
  };

  return (
    <div className="flex min-h-screen flex-col bg-gray-800">
      <Head>
        <title>Quiz App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />
      <main className="relative flex flex-1 flex-col items-center justify-center  p-4 font-sans">
        {username && (
          <div className="absolute top-0 mt-2 mr-2 flex items-center justify-center gap-4 rounded-md bg-gray-700 px-3 py-2">
            <p className="text-center text-xl text-green-400">👤 {username}</p>
            <button className="text-center text-xl text-red-400">❌</button>
          </div>
        )}

        {username ? (
          <QuizContext.Provider
            value={{
              show: showQuizScreen,
              toggleShow: toggleQuizScreen,
            }}
          >
            {showQuizScreen ? (
              <Quiz />
            ) : (
              <LoginButton toggleQuizScreen={toggleQuizScreen} />
            )}
          </QuizContext.Provider>
        ) : (
          <Form handleSubmit={handleSubmit} />
        )}
      </main>
    </div>
  );
};

export default Home;
